<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="model.mapper.UnregisteredMapper" >
  <resultMap id="UnregisteredResultMap" type="model.vo.Unregistered" >
    <id column="URG_NUM" property="urgNum" jdbcType="DECIMAL" />
    <result column="URG_NAME" property="urgName" jdbcType="VARCHAR" />
    <result column="URG_EMAIL" property="urgEmail" jdbcType="VARCHAR" />
    <result column="URG_PHONE" property="urgPhone" jdbcType="VARCHAR" />
    
    <collection property="unregisteredReservations" ofType="UnregisteredReservation" resultMap="UnregisteredReservationResultMap" />
  </resultMap>
  
    <resultMap id="UnregisteredReservationResultMap" type="model.vo.UnregisteredReservation" >
    <id column="URG_RSV_NUM" property="urgRsvNum" jdbcType="DECIMAL" />
    <result column="RSV_NUM" property="rsvNum" jdbcType="DECIMAL" />
    <result column="URG_NUM" property="urgNum" jdbcType="DECIMAL" />
    <result column="URG_RSV_PASSWORD" property="urgRsvPassword" jdbcType="VARCHAR" />
  </resultMap>
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    URG_NUM, URG_NAME, URG_EMAIL, URG_PHONE
  </sql>
  <select id="selectByExample" resultMap="UnregisteredResultMap" parameterType="model.vo.UnregisteredExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from HR.UNREGISTERED
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="UnregisteredResultMap" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    from HR.UNREGISTERED
    where URG_NUM = #{urgNum,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from HR.UNREGISTERED
    where URG_NUM = #{urgNum,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="model.vo.UnregisteredExample" >
    delete from HR.UNREGISTERED
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.vo.Unregistered" >
    insert into HR.UNREGISTERED (URG_NUM, URG_NAME, URG_EMAIL, 
      URG_PHONE)
    values (#{urgNum,jdbcType=DECIMAL}, #{urgName,jdbcType=VARCHAR}, #{urgEmail,jdbcType=VARCHAR}, 
      #{urgPhone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.vo.Unregistered" >
    insert into HR.UNREGISTERED
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="urgNum != null" >
        URG_NUM,
      </if>
      <if test="urgName != null" >
        URG_NAME,
      </if>
      <if test="urgEmail != null" >
        URG_EMAIL,
      </if>
      <if test="urgPhone != null" >
        URG_PHONE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="urgNum != null" >
        #{urgNum,jdbcType=DECIMAL},
      </if>
      <if test="urgName != null" >
        #{urgName,jdbcType=VARCHAR},
      </if>
      <if test="urgEmail != null" >
        #{urgEmail,jdbcType=VARCHAR},
      </if>
      <if test="urgPhone != null" >
        #{urgPhone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.vo.UnregisteredExample" resultType="java.lang.Integer" >
    select count(*) from HR.UNREGISTERED
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update HR.UNREGISTERED
    <set >
      <if test="record.urgNum != null" >
        URG_NUM = #{record.urgNum,jdbcType=DECIMAL},
      </if>
      <if test="record.urgName != null" >
        URG_NAME = #{record.urgName,jdbcType=VARCHAR},
      </if>
      <if test="record.urgEmail != null" >
        URG_EMAIL = #{record.urgEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.urgPhone != null" >
        URG_PHONE = #{record.urgPhone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update HR.UNREGISTERED
    set URG_NUM = #{record.urgNum,jdbcType=DECIMAL},
      URG_NAME = #{record.urgName,jdbcType=VARCHAR},
      URG_EMAIL = #{record.urgEmail,jdbcType=VARCHAR},
      URG_PHONE = #{record.urgPhone,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.vo.Unregistered" >
    update HR.UNREGISTERED
    <set >
      <if test="urgName != null" >
        URG_NAME = #{urgName,jdbcType=VARCHAR},
      </if>
      <if test="urgEmail != null" >
        URG_EMAIL = #{urgEmail,jdbcType=VARCHAR},
      </if>
      <if test="urgPhone != null" >
        URG_PHONE = #{urgPhone,jdbcType=VARCHAR},
      </if>
    </set>
    where URG_NUM = #{urgNum,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.vo.Unregistered" >
    update HR.UNREGISTERED
    set URG_NAME = #{urgName,jdbcType=VARCHAR},
      URG_EMAIL = #{urgEmail,jdbcType=VARCHAR},
      URG_PHONE = #{urgPhone,jdbcType=VARCHAR}
    where URG_NUM = #{urgNum,jdbcType=DECIMAL}
  </update>
  <cache />
  <select resultMap="UnregisteredResultMap" parameterType="model.vo.UnregisteredExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from HR.UNREGISTERED
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>