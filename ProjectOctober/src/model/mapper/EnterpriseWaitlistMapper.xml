<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="model.mapper.EnterpriseWaitlistMapper" >
  <resultMap id="BaseResultMap" type="model.vo.EnterpriseWaitlist" >
    <id column="ETP_NUM" property="etpNum" jdbcType="VARCHAR" />
    <id column="ETP_EMAIL" property="etpEmail" jdbcType="VARCHAR" />
    <result column="OWNER" property="owner" jdbcType="VARCHAR" />
    <result column="SUPERCLASS" property="superclass" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="ZIPCODE" property="zipcode" jdbcType="VARCHAR" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="START_HOUR" property="startHour" jdbcType="DATE" />
    <result column="END_HOUR" property="endHour" jdbcType="DATE" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="MALE_STAFF" property="maleStaffCount" jdbcType="DECIMAL" />
    <result column="FEMALE_STAFF" property="femaleStaffCount" jdbcType="DECIMAL" />
    <result column="HOURLY_CAPACITY" property="hourlyCapacity" jdbcType="DECIMAL" />
    <result column="RSV_DEADLINE" property="modificationDeadline" jdbcType="DECIMAL" />
    <result column="ETP_NOTIFICATION" property="ntfFrequencyToEtp" jdbcType="DECIMAL" />
    <result column="CST_NOTIFICATION" property="ntfFrequencyToCst" jdbcType="DECIMAL" />
    <result column="TEMPLATE_TYPE" property="pageTemplateType" jdbcType="DECIMAL" />
    <result column="MAP_API_ADDRESS" property="etpLocationMapAPIAddress" jdbcType="VARCHAR" />
    <result column="LOCATION_DESC" property="etpLocationGuide" jdbcType="VARCHAR" />
    <result column="SVC_LIST" property="svcList" jdbcType="VARCHAR" />
    <result column="SUBCLASS" property="subclass" jdbcType="VARCHAR" />
    <result column="SPECIALTY_LIST" property="specialtyList" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ETP_NUM, ETP_EMAIL, OWNER, SUPERCLASS, ADDRESS, ZIPCODE, TITLE, START_HOUR, END_HOUR, 
    PHONE, MALE_STAFF, FEMALE_STAFF, HOURLY_CAPACITY, RSV_DEADLINE, ETP_NOTIFICATION, 
    CST_NOTIFICATION, TEMPLATE_TYPE, MAP_API_ADDRESS, LOCATION_DESC, SVC_LIST, SUBCLASS, 
    SPECIALTY_LIST, DESCRIPTION
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.vo.EnterpriseWaitlistExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from HR.ENTERPRISE_WAITLIST
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="model.vo.EnterpriseWaitlistKey" >
    select 
    <include refid="Base_Column_List" />
    from HR.ENTERPRISE_WAITLIST
    where ETP_NUM = #{etpNum,jdbcType=VARCHAR}
      and ETP_EMAIL = #{etpEmail,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="model.vo.EnterpriseWaitlistKey" >
    delete from HR.ENTERPRISE_WAITLIST
    where ETP_NUM = #{etpNum,jdbcType=VARCHAR}
      and ETP_EMAIL = #{etpEmail,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.vo.EnterpriseWaitlistExample" >
    delete from HR.ENTERPRISE_WAITLIST
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.vo.EnterpriseWaitlist" >
    insert into HR.ENTERPRISE_WAITLIST (ETP_NUM, ETP_EMAIL, OWNER, 
      SUPERCLASS, ADDRESS, ZIPCODE, 
      TITLE, START_HOUR, END_HOUR, 
      PHONE, MALE_STAFF, FEMALE_STAFF, 
      HOURLY_CAPACITY, RSV_DEADLINE, ETP_NOTIFICATION, 
      CST_NOTIFICATION, TEMPLATE_TYPE, MAP_API_ADDRESS, 
      LOCATION_DESC, SVC_LIST, SUBCLASS, 
      SPECIALTY_LIST, DESCRIPTION)
    values (#{etpNum,jdbcType=VARCHAR}, #{etpEmail,jdbcType=VARCHAR}, #{owner,jdbcType=VARCHAR}, 
      #{superclass,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{zipcode,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{startHour,jdbcType=DATE}, #{endHour,jdbcType=DATE}, 
      #{phone,jdbcType=VARCHAR}, #{maleStaffCount,jdbcType=DECIMAL}, #{femaleStaffCount,jdbcType=DECIMAL}, 
      #{hourlyCapacity,jdbcType=DECIMAL}, #{modificationDeadline,jdbcType=DECIMAL}, #{ntfFrequencyToEtp,jdbcType=DECIMAL}, 
      #{ntfFrequencyToCst,jdbcType=DECIMAL}, #{pageTemplateType,jdbcType=DECIMAL}, #{etpLocationMapAPIAddress,jdbcType=VARCHAR}, 
      #{etpLocationGuide,jdbcType=VARCHAR}, #{svcList,jdbcType=VARCHAR}, #{subclass,jdbcType=VARCHAR}, 
      #{specialtyList,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.vo.EnterpriseWaitlist" >
    insert into HR.ENTERPRISE_WAITLIST
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="etpNum != null" >
        ETP_NUM,
      </if>
      <if test="etpEmail != null" >
        ETP_EMAIL,
      </if>
      <if test="owner != null" >
        OWNER,
      </if>
      <if test="superclass != null" >
        SUPERCLASS,
      </if>
      <if test="address != null" >
        ADDRESS,
      </if>
      <if test="zipcode != null" >
        ZIPCODE,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="startHour != null" >
        START_HOUR,
      </if>
      <if test="endHour != null" >
        END_HOUR,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="maleStaffCount != null" >
        MALE_STAFF,
      </if>
      <if test="femaleStaffCount != null" >
        FEMALE_STAFF,
      </if>
      <if test="hourlyCapacity != null" >
        HOURLY_CAPACITY,
      </if>
      <if test="modificationDeadline != null" >
        RSV_DEADLINE,
      </if>
      <if test="ntfFrequencyToEtp != null" >
        ETP_NOTIFICATION,
      </if>
      <if test="ntfFrequencyToCst != null" >
        CST_NOTIFICATION,
      </if>
      <if test="pageTemplateType != null" >
        TEMPLATE_TYPE,
      </if>
      <if test="etpLocationMapAPIAddress != null" >
        MAP_API_ADDRESS,
      </if>
      <if test="etpLocationGuide != null" >
        LOCATION_DESC,
      </if>
      <if test="svcList != null" >
        SVC_LIST,
      </if>
      <if test="subclass != null" >
        SUBCLASS,
      </if>
      <if test="specialtyList != null" >
        SPECIALTY_LIST,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="etpNum != null" >
        #{etpNum,jdbcType=VARCHAR},
      </if>
      <if test="etpEmail != null" >
        #{etpEmail,jdbcType=VARCHAR},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="superclass != null" >
        #{superclass,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null" >
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="startHour != null" >
        #{startHour,jdbcType=DATE},
      </if>
      <if test="endHour != null" >
        #{endHour,jdbcType=DATE},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="maleStaffCount != null" >
        #{maleStaffCount,jdbcType=DECIMAL},
      </if>
      <if test="femaleStaffCount != null" >
        #{femaleStaffCount,jdbcType=DECIMAL},
      </if>
      <if test="hourlyCapacity != null" >
        #{hourlyCapacity,jdbcType=DECIMAL},
      </if>
      <if test="modificationDeadline != null" >
        #{modificationDeadline,jdbcType=DECIMAL},
      </if>
      <if test="ntfFrequencyToEtp != null" >
        #{ntfFrequencyToEtp,jdbcType=DECIMAL},
      </if>
      <if test="ntfFrequencyToCst != null" >
        #{ntfFrequencyToCst,jdbcType=DECIMAL},
      </if>
      <if test="pageTemplateType != null" >
        #{pageTemplateType,jdbcType=DECIMAL},
      </if>
      <if test="etpLocationMapAPIAddress != null" >
        #{etpLocationMapAPIAddress,jdbcType=VARCHAR},
      </if>
      <if test="etpLocationGuide != null" >
        #{etpLocationGuide,jdbcType=VARCHAR},
      </if>
      <if test="svcList != null" >
        #{svcList,jdbcType=VARCHAR},
      </if>
      <if test="subclass != null" >
        #{subclass,jdbcType=VARCHAR},
      </if>
      <if test="specialtyList != null" >
        #{specialtyList,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.vo.EnterpriseWaitlistExample" resultType="java.lang.Integer" >
    select count(*) from HR.ENTERPRISE_WAITLIST
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update HR.ENTERPRISE_WAITLIST
    <set >
      <if test="record.etpNum != null" >
        ETP_NUM = #{record.etpNum,jdbcType=VARCHAR},
      </if>
      <if test="record.etpEmail != null" >
        ETP_EMAIL = #{record.etpEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.owner != null" >
        OWNER = #{record.owner,jdbcType=VARCHAR},
      </if>
      <if test="record.superclass != null" >
        SUPERCLASS = #{record.superclass,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null" >
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        TITLE = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.startHour != null" >
        START_HOUR = #{record.startHour,jdbcType=DATE},
      </if>
      <if test="record.endHour != null" >
        END_HOUR = #{record.endHour,jdbcType=DATE},
      </if>
      <if test="record.phone != null" >
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.maleStaffCount != null" >
        MALE_STAFF = #{record.maleStaffCount,jdbcType=DECIMAL},
      </if>
      <if test="record.femaleStaffCount != null" >
        FEMALE_STAFF = #{record.femaleStaffCount,jdbcType=DECIMAL},
      </if>
      <if test="record.hourlyCapacity != null" >
        HOURLY_CAPACITY = #{record.hourlyCapacity,jdbcType=DECIMAL},
      </if>
      <if test="record.modificationDeadline != null" >
        RSV_DEADLINE = #{record.modificationDeadline,jdbcType=DECIMAL},
      </if>
      <if test="record.ntfFrequencyToEtp != null" >
        ETP_NOTIFICATION = #{record.ntfFrequencyToEtp,jdbcType=DECIMAL},
      </if>
      <if test="record.ntfFrequencyToCst != null" >
        CST_NOTIFICATION = #{record.ntfFrequencyToCst,jdbcType=DECIMAL},
      </if>
      <if test="record.pageTemplateType != null" >
        TEMPLATE_TYPE = #{record.pageTemplateType,jdbcType=DECIMAL},
      </if>
      <if test="record.etpLocationMapAPIAddress != null" >
        MAP_API_ADDRESS = #{record.etpLocationMapAPIAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.etpLocationGuide != null" >
        LOCATION_DESC = #{record.etpLocationGuide,jdbcType=VARCHAR},
      </if>
      <if test="record.svcList != null" >
        SVC_LIST = #{record.svcList,jdbcType=VARCHAR},
      </if>
      <if test="record.subclass != null" >
        SUBCLASS = #{record.subclass,jdbcType=VARCHAR},
      </if>
      <if test="record.specialtyList != null" >
        SPECIALTY_LIST = #{record.specialtyList,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update HR.ENTERPRISE_WAITLIST
    set ETP_NUM = #{record.etpNum,jdbcType=VARCHAR},
      ETP_EMAIL = #{record.etpEmail,jdbcType=VARCHAR},
      OWNER = #{record.owner,jdbcType=VARCHAR},
      SUPERCLASS = #{record.superclass,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      TITLE = #{record.title,jdbcType=VARCHAR},
      START_HOUR = #{record.startHour,jdbcType=DATE},
      END_HOUR = #{record.endHour,jdbcType=DATE},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      MALE_STAFF = #{record.maleStaffCount,jdbcType=DECIMAL},
      FEMALE_STAFF = #{record.femaleStaffCount,jdbcType=DECIMAL},
      HOURLY_CAPACITY = #{record.hourlyCapacity,jdbcType=DECIMAL},
      RSV_DEADLINE = #{record.modificationDeadline,jdbcType=DECIMAL},
      ETP_NOTIFICATION = #{record.ntfFrequencyToEtp,jdbcType=DECIMAL},
      CST_NOTIFICATION = #{record.ntfFrequencyToCst,jdbcType=DECIMAL},
      TEMPLATE_TYPE = #{record.pageTemplateType,jdbcType=DECIMAL},
      MAP_API_ADDRESS = #{record.etpLocationMapAPIAddress,jdbcType=VARCHAR},
      LOCATION_DESC = #{record.etpLocationGuide,jdbcType=VARCHAR},
      SVC_LIST = #{record.svcList,jdbcType=VARCHAR},
      SUBCLASS = #{record.subclass,jdbcType=VARCHAR},
      SPECIALTY_LIST = #{record.specialtyList,jdbcType=VARCHAR},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.vo.EnterpriseWaitlist" >
    update HR.ENTERPRISE_WAITLIST
    <set >
      <if test="owner != null" >
        OWNER = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="superclass != null" >
        SUPERCLASS = #{superclass,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null" >
        ZIPCODE = #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="startHour != null" >
        START_HOUR = #{startHour,jdbcType=DATE},
      </if>
      <if test="endHour != null" >
        END_HOUR = #{endHour,jdbcType=DATE},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="maleStaffCount != null" >
        MALE_STAFF = #{maleStaffCount,jdbcType=DECIMAL},
      </if>
      <if test="femaleStaffCount != null" >
        FEMALE_STAFF = #{femaleStaffCount,jdbcType=DECIMAL},
      </if>
      <if test="hourlyCapacity != null" >
        HOURLY_CAPACITY = #{hourlyCapacity,jdbcType=DECIMAL},
      </if>
      <if test="modificationDeadline != null" >
        RSV_DEADLINE = #{modificationDeadline,jdbcType=DECIMAL},
      </if>
      <if test="ntfFrequencyToEtp != null" >
        ETP_NOTIFICATION = #{ntfFrequencyToEtp,jdbcType=DECIMAL},
      </if>
      <if test="ntfFrequencyToCst != null" >
        CST_NOTIFICATION = #{ntfFrequencyToCst,jdbcType=DECIMAL},
      </if>
      <if test="pageTemplateType != null" >
        TEMPLATE_TYPE = #{pageTemplateType,jdbcType=DECIMAL},
      </if>
      <if test="etpLocationMapAPIAddress != null" >
        MAP_API_ADDRESS = #{etpLocationMapAPIAddress,jdbcType=VARCHAR},
      </if>
      <if test="etpLocationGuide != null" >
        LOCATION_DESC = #{etpLocationGuide,jdbcType=VARCHAR},
      </if>
      <if test="svcList != null" >
        SVC_LIST = #{svcList,jdbcType=VARCHAR},
      </if>
      <if test="subclass != null" >
        SUBCLASS = #{subclass,jdbcType=VARCHAR},
      </if>
      <if test="specialtyList != null" >
        SPECIALTY_LIST = #{specialtyList,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where ETP_NUM = #{etpNum,jdbcType=VARCHAR}
      and ETP_EMAIL = #{etpEmail,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.vo.EnterpriseWaitlist" >
    update HR.ENTERPRISE_WAITLIST
    set OWNER = #{owner,jdbcType=VARCHAR},
      SUPERCLASS = #{superclass,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      ZIPCODE = #{zipcode,jdbcType=VARCHAR},
      TITLE = #{title,jdbcType=VARCHAR},
      START_HOUR = #{startHour,jdbcType=DATE},
      END_HOUR = #{endHour,jdbcType=DATE},
      PHONE = #{phone,jdbcType=VARCHAR},
      MALE_STAFF = #{maleStaffCount,jdbcType=DECIMAL},
      FEMALE_STAFF = #{femaleStaffCount,jdbcType=DECIMAL},
      HOURLY_CAPACITY = #{hourlyCapacity,jdbcType=DECIMAL},
      RSV_DEADLINE = #{modificationDeadline,jdbcType=DECIMAL},
      ETP_NOTIFICATION = #{ntfFrequencyToEtp,jdbcType=DECIMAL},
      CST_NOTIFICATION = #{ntfFrequencyToCst,jdbcType=DECIMAL},
      TEMPLATE_TYPE = #{pageTemplateType,jdbcType=DECIMAL},
      MAP_API_ADDRESS = #{etpLocationMapAPIAddress,jdbcType=VARCHAR},
      LOCATION_DESC = #{etpLocationGuide,jdbcType=VARCHAR},
      SVC_LIST = #{svcList,jdbcType=VARCHAR},
      SUBCLASS = #{subclass,jdbcType=VARCHAR},
      SPECIALTY_LIST = #{specialtyList,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR}
    where ETP_NUM = #{etpNum,jdbcType=VARCHAR}
      and ETP_EMAIL = #{etpEmail,jdbcType=VARCHAR}
  </update>
  <cache />
  <select resultMap="BaseResultMap" parameterType="model.vo.EnterpriseWaitlistExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from HR.ENTERPRISE_WAITLIST
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>